using System.Collections; using System.Collections.Generic; using UnityEngine; using Lean; using Lean.Touch;  public class swaping : MonoBehaviour {   public Gridmanager gridmanager;   protected virtual void OnEnable()   {     LeanTouch.OnFingerSwipe+=OnSwipe;    }   public void OnSwipe(LeanFinger finger)   {      swapTiles(finger);    }    // Use this for initialization   void Start () { 		 	} 	 	// Update is called once per frame 	void Update () { 		 	}   private void swapTiles(LeanFinger finger)   {       //this.transform;       // get coord       // get in array       // swap with other from direction       // left =          Debug.Log(finger);       // droite        Camera main = Camera.main;       Vector3 ray = main.ScreenToWorldPoint(finger.StartScreenPosition);       Vector2 mousePos2D = new Vector2(ray.x, ray.y);          RaycastHit2D hit = Physics2D.Raycast(mousePos2D, Vector2.zero);       Debug.Log(hit);       if ( hit.collider!=null )  {        Transform tmp = hit.transform;       Transform [,] grid = gridmanager.getGrid( );         Debug.Log("Something was clicked!");           if ( finger.LastSnapshotScaledDelta.x>0 ) {         gridmanager.moveRight(hit.transform);         Debug.Log("droite");           }           if ( finger.LastSnapshotScaledDelta.x<0 )           {             Debug.Log("gauche");           }           //haut           if ( finger.LastSnapshotScaledDelta.y>0 )           {             Debug.Log("haut");           }           if ( finger.LastSnapshotScaledDelta.y<0 )           {             Debug.Log("bas");           }           //if ( input.gettouch(0).deltaposition.x>0 )           //{           //  transform currenttmp = tile;           //  moving currentmoving = tile.getcomponent<moving>( );           //  grid [currentmoving.x, currentmoving.y]=grid [currentmoving.x+1, currentmoving.y];           //  grid [currentmoving.x+1, currentmoving.y]=tile;             //  debug.log("user is swiping to the right");           //}     }   } } 